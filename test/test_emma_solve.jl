@testset "test emma_solve.jl" begin

    ## Input data - GRM of 10 samples with random marker states
    G = [1.293739149012902 -0.16139197131904823 0.06142960544443724 -0.03410981364269969 -0.09785462692070798 -0.3207799381240275 0.02963499963530861 -0.5121181123978864 -0.3208318053439445 0.06153333988427127;
         -0.16139197131904823 1.2517267008801218 0.19975948096310944 -0.10822807090411048 -0.27819695057216026 0.1362221365647692 -0.2569313904061852 -0.2675641704891727 -0.3949500626053553 -0.11880898376718102;
          0.06142960544443724 0.19975948096310944 1.0600254560668438 -0.31030275970079096 -0.05537537380867479 -0.1720766186219528 0.1783383191373833 0.061481472664354254 -0.5970247514020358 -0.427107738953903;
          -0.03410981364269969 -0.10822807090411048 -0.31030275970079096 1.293842883452736 -0.15091479289581172 0.15728022785107623 -0.4483214318999611 -0.24650607920286566 0.15722836063115922 -0.31019902526095694;
          -0.09785462692070798 -0.27819695057216026 -0.05537537380867479 -0.15091479289581172 0.8476810577265949 -0.22513678459705652 0.33772628594236254 -0.31025089248087395 0.09348354735315094 -0.16149570575888225;
          -0.3207799381240275 0.1362221365647692 -0.1720766186219528 0.15728022785107623 -0.22513678459705652 1.039174833660205 -0.6287674899912474 -0.3207280709041105 0.4016785681000389 -0.06574881779207728;
          0.02963499963530861 -0.2569313904061852 0.1783383191373833 -0.4483214318999611 0.33772628594236254 -0.6287674899912474 1.5275565763987942 0.3483590660253501 -0.7350434236012059 -0.35267827837299015;
          -0.5121181123978864 -0.2675641704891727 0.061481472664354254 -0.24650607920286566 -0.31025089248087395 -0.3207280709041105 0.3483590660253501 1.506291016232819 -0.214555871733986 -0.04463885928585322;
          -0.3208318053439445 -0.3949500626053553 -0.5970247514020358 0.15722836063115922 0.09348354735315094 0.4016785681000389 -0.7350434236012059 -0.214555871733986 1.3577432983904953 0.2528715141581302;
          0.06153333988427127 -0.11880898376718102 -0.427107738953903 -0.31019902526095694 -0.16149570575888225 -0.06574881779207728 -0.35267827837299015 -0.04463885928585322 0.2528715141581302 1.1664569913365535]

    ## 10 random phenotypic observations
    ## One with first two observations masked
    y = [3.96, 2.98, -5.95, -0.53, -6.08, 3.78, -1.39, -0.99, 3.56, -0.11]
    ymiss = [missing, missing, -5.95, -0.53, -6.08, 3.78, -1.39, -0.99, 3.56, -0.11]

    ## Corresponding outputs from R rrBLUP() function
    R_Vu = 0.8075878
    R_Ve = 12.98681
    R_beta = [-0.07708973]
    R_betaSE = [1.139601]
    R_u = [0.181754946066257, 0.193111458727881, -0.436443695446718,
        0.180661469885897, -0.374795715351581, 0.424058630251299, -0.56066172105549,
        -0.261009940809855, 0.412441797570595, 0.241780052713649]
    R_uSE = [0.972706269095014, 0.958260126113808, 0.879679415082355,
        0.972627890114091, 0.795605549726895, 0.868175073447568, 1.03282828649368,
        1.04032291795491, 0.977447287395207, 0.925965435237298]
    R_u_miss = [-0.676740957274953, -0.200443327484438, -2.05185497570207,
        0.680157849024289, -1.34792724713034, 2.01562169448403, -1.54217446953467,
        0.0312472107634598, 2.21599028744254, 0.879836742761478]
    R_uSE_miss = [2.1023253189762, 2.07295974439978, 1.52356616920963,
        1.6702155926924, 1.44525528510983, 1.51819134540549, 1.67532735422519,
        1.79203849863869, 1.64963580054911, 1.60201062225648]

    ## Find EMMA solution
    tol_val = 1e-5
    emma_out = emma_solve(y = y, K = G, return_SE = true)

    @test isapprox(emma_out.Vu, R_Vu, atol = tol_val)
    @test isapprox(emma_out.Ve, R_Ve, atol = tol_val)
    @test all(isapprox.(emma_out.beta, R_beta, atol = tol_val))
    @test all(isapprox.(emma_out.beta_SE, R_betaSE, atol = tol_val))
    @test all(isapprox.(emma_out.u, R_u, atol = tol_val))
    @test all(isapprox.(emma_out.u_SE, R_uSE, atol = tol_val))

    ## Now run the same with missing observations
    emma_out_miss = emma_solve(y = ymiss, K = G, return_SE = true)
    @test all(isapprox.(emma_out_miss.u, R_u_miss, atol = tol_val))
    @test all(isapprox.(emma_out_miss.u_SE, R_uSE_miss, atol = tol_val))
end
